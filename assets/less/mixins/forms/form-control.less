// Common form controls
//
// Shared size and type resets for form controls. Apply `.form-control` to any
// of the following form controls:
//
// select
// textarea
// input[type="text"]
// input[type="password"]
// input[type="datetime"]
// input[type="datetime-local"]
// input[type="date"]
// input[type="month"]
// input[type="time"]
// input[type="week"]
// input[type="number"]
// input[type="email"]
// input[type="url"]
// input[type="search"]
// input[type="tel"]
// input[type="color"]

.form-control(@color; @background; @border-color; @font-size: @font-size-base; @font-weight: normal; @line-height: @line-height-base; @border-radius: @border-radius-base) {
  display: block;
  width: 100%;
  height: ((@font-size * @line-height) + (@padding-base-vertical * 2 + 2));
  padding: @padding-base-vertical @padding-base-horizontal;
  font-size: @font-size;
  font-weight: @font-weight;
  line-height: (@font-size * @line-height);
  color: @color;
  background-color: @background;
  background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
  border: 1px solid @border-color;
  border-radius: @border-radius; // Note: This has no effect on <select>s in some browsers, due to the limited stylability of <select>s in CSS.
  transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;

  // Customize the `:focus` state to imitate native WebKit styles.
  .form-control-focus();

  // Placeholder
  .placeholder();

  // Unstyle the caret on `<select>`s in IE10+.
  &::-ms-expand {
    border: 0;
    background-color: transparent;
  }

  // Disabled and read-only inputs
  //
  // HTML5 says that controls under a fieldset > legend:first-child won't be
  // disabled if the fieldset is disabled. Due to implementation difficulty, we
  // don't honor that edge case; we style them as disabled anyway.
  &[disabled],
  &[readonly],
  fieldset[disabled] & {
    background-color: @gray-lighter;
    opacity: 1; // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655
  }

  &[disabled],
  fieldset[disabled] & {
    cursor: @cursor-disabled;
  }

  // Reset height for `textarea`s
  textarea& {
    height: auto;
  }

  // Special styles for iOS temporal inputs
  //
  // In Mobile Safari, setting `display: block` on temporal inputs causes the
  // text within the input to become vertically misaligned. As a workaround, we
  // set a pixel line-height that matches the given height of the input, but only
  // for Safari. See https://bugs.webkit.org/show_bug.cgi?id=139848
  //
  // Note that as of 8.3, iOS doesn't support `datetime` or `week`.

  @media screen and (-webkit-min-device-pixel-ratio: 0) {
    input[type="date"],
    input[type="time"],
    input[type="datetime-local"],
    input[type="month"] {
      line-height: @line-height;
    }
  }
}


